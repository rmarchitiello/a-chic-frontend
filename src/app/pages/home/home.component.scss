/* =============================================================================
   HOME COMPONENT (unico template per desktop + mobile) — versione NGX-FLICKING
   Obiettivi:
   1) Titolo di sezione (overlay) centrato e bianco su TUTTE le slide del carosello:
      è un fratello di <ngx-flicking> dentro un wrapper comune (non scorre).
   2) Panel name centrato dentro OGNI pannello (caption per-pannello).
   3) Layering chiaro: frecce/paginazione sopra, overlay titolo sotto, caption pannello sotto.
   ========================================================================== */

/* Struttura base pagina */
:host {
  display: block;
  background: #fff;
}

.home,
.home-container {
  background: #fff;
  width: 100%;
  margin: 0 auto;
}

/* Evitare trascinamento/selelezione nativa di immagini e video */
.carosello-panel img,
.carosello-panel video {
  -webkit-user-drag: none; /* Safari/Chrome */
  user-select: none;
  -webkit-user-select: none;
}

/* =============================================================================
   HEADER DI SEZIONE (solo pulsante admin; il titolo visivo è overlay nel wrapper)
   ========================================================================== */
.carousel-section-header {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  margin: 1rem 0;

  .edit-admin-icon {
    position: absolute;
    top: 12px;
    right: 12px;
    z-index: 10; /* sopra al contesto circostante, ma non interferisce con le frecce */
    background: rgba(255, 255, 255, 0.85);

    mat-icon { color: #000; }
  }
}

/* =============================================================================
   UTILITY FULL-BLEED (per l’hero a larghezza viewport)
   - Spinge il wrapper a 100vw evitando padding orizzontali del container.
   - Il wrapper controlla overflow ed è l’ancora per overlay/controlli.
   ========================================================================== */
@mixin full-bleed {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  background: #000; /* base neutra per evitare bordi bianchi in transizione */
}

/* =============================================================================
   WRAPPER CAROSELLO (padre di <ngx-flicking> e dell’overlay titolo di sezione)
   - Deve essere position: relative per consentire posizionamenti assoluti interni.
   - L’hero eredita il mixin full-bleed; gli altri restano “in pagina”.
   ========================================================================== */
.carousel-wrapper {
  position: relative; /* ancora per overlay e controlli */
  overflow: hidden;   /* evita sbordamenti del media */
  background: transparent;
}

/* Wrapper specifico per HERO (full-bleed; altezza via media queries) */
.flicking-hero {
  @include full-bleed();
  position: relative;
  overflow: hidden;
  background: #000; /* nero: migliori contrasti su testi bianchi */
}

/* Wrapper per caroselli non-hero (in contenuto normale) */
.flicking-default {
  position: relative;
  overflow: hidden;
  background: transparent;
}

/* =============================================================================
   OVERLAY TITOLO DI SEZIONE (fratello di <ngx-flicking>, non scorre)
   - Copre l’intero wrapper e non intercetta input (pointer-events: none).
   - Z-index 2: le frecce/paginazione restano sopra (z-index 3).
   ========================================================================== */
.carousel-title-overlay {
  position: absolute;
  inset: 0;                    /* top:0 right:0 bottom:0 left:0 */
  display: grid;
  place-items: center;         /* centratura perfetta */
  pointer-events: none;        /* non blocca swipe/click */
  z-index: 2;
}

.carousel-title {
  margin: 0;
  padding: 0 1rem;
  color: #fff;
  text-align: center;
  line-height: 1.15;
  /* dimensione fluida: leggibile su mobile e desktop */
  font-weight: 700;
  font-size: clamp(20px, 3.2vw, 48px);
  text-shadow: 0 2px 12px rgba(0, 0, 0, 0.55);
}

/* =============================================================================
   PANNELLI NGX-FLICKING (stile base) — usati e poi “estesi” dalle varianti
   ========================================================================== */
.carosello-panel {
  position: relative;      /* necessario per caption per-pannello */
  overflow: hidden;
  width: 100%;
  height: 220px;           /* base per non-hero su mobile */
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  background: #111;        /* fondo scuro per uniformità col media */
  border-radius: 0;
  margin: 0 8px;           /* spaziatura orizzontale tra card non-hero */
  font-weight: 600;

  img,
  video {
    width: 100%;
    height: 100%;
    object-fit: cover;     /* riempie il pannello senza distorsioni */
    object-position: center;
    border-radius: inherit;
    display: block;
    background: #000;
  }

  audio {
    width: 80%;
    display: block;
  }
}

/* Caption per-pannello: testo centrato dentro OGNI slide */
.panel-caption {
  position: absolute;
  inset: 0;                 /* copre tutto il pannello */
  display: grid;
  place-items: center;      /* centratura orizzontale+verticale */
  pointer-events: none;     /* non blocca interazioni con media/frecce */
  z-index: 1;               /* sotto alle frecce/paginazione (z=3) e sotto al titolo sezione (z=2) */
}

.panel-caption__text {
  color: #fff;
  text-align: center;
  padding: 0 .75rem;
  line-height: 1.15;
  font-weight: 600;
  font-size: clamp(14px, 2.2vw, 28px);
  text-shadow:
    0 2px 8px rgba(0, 0, 0, 0.55),
    0 0 1px rgba(0, 0, 0, 0.6); /* nitidezza su fondi complessi */
  /* opzionale: lieve backdrop per testi su video molto chiari
     background: rgba(0,0,0,0.15);
     border-radius: 8px;
  */
}

/* Placeholder quando non ci sono media */
.media-placeholder {
  font-size: 14px;
  color: #ccc;
  text-align: center;
  padding: 1rem;
}

/* =============================================================================
   VARIANTI PANELCLASS (configurate dal TS → otherOption.panelClass)
   - 'panel-hero' → pannelli dell’hero: seguono SEMPRE l’altezza del wrapper
   - 'panel-card' → pannelli compatti per sezioni “card”
   ========================================================================== */

/* Pannello hero: riempie l’altezza del wrapper hero e senza gap tra slide */
.panel-hero {
  @extend .carosello-panel;
  height: 100%;     /* chiave: segue .flicking-hero { height: ... } */
  border-radius: 0;
  margin: 0;
}

/* Pannelli a “card” (non-hero): più alti, media contenuti */
.panel-card {
  @extend .carosello-panel;
  height: 300px;

  img,
  video { object-fit: contain; background: #111; }
}

/* =============================================================================
   FRECCE E PAGINAZIONE NGX-FLICKING
   - Si usa la classe .none per la visibilità (no *ngIf sugli elementi).
   - In HERO i controlli sono in assoluto dentro il wrapper.
   - Layering: frecce/paginazione sopra overlay e caption.
   ========================================================================== */

/* Utility per “nascondere” senza rimuovere dal DOM */
:host ::ng-deep .none {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
}

/* Posizionamento generale frecce; l’hero le ricalibra con positioning assoluto */
:host ::ng-deep .flicking-arrow-prev { left: 40px !important; z-index: 3; }
:host ::ng-deep .flicking-arrow-next { right: 40px !important; z-index: 3; }

/* Paginazione default (caroselli non-hero): riga sotto il carosello */
:host ::ng-deep .flicking-pagination {
  margin-top: 12px;
  text-align: center;
  z-index: 3; /* sopra ad overlay/caption */
}

:host ::ng-deep .flicking-pagination-bullet {
  display: inline-block;
  width: 8px;
  height: 8px;
  margin: 0 4px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.35);
  cursor: pointer;
  transition: background-color 0.2s;
}

:host ::ng-deep .flicking-pagination-bullet-active {
  background-color: #fff;
}

/* HERO: paginazione e frecce assolute dentro il wrapper hero */
:host ::ng-deep .flicking-hero .flicking-pagination {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 24px;  /* pallini all’interno dell’hero, verso il fondo */
  margin-top: 0;
  z-index: 3;    /* sopra a titolo overlay (z=2) e caption (z=1) */
}

:host ::ng-deep .flicking-hero .flicking-arrow-prev,
:host ::ng-deep .flicking-hero .flicking-arrow-next {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 3;
}

/* =============================================================================
   ALTEZZE: propagare 100% dal wrapper hero al contenuto Flicking
   Perché usare il combinatore '>' tra .flicking-hero e ngx-flicking:
   - Precisione: colpisce SOLO l’elemento figlio diretto <ngx-flicking>.
   - Evita effetti collaterali su eventuali discendenti/nidificazioni future.
   ========================================================================== */

/* 1) L’istanza <ngx-flicking> occupa tutta l’altezza del wrapper hero */
.flicking-hero > ngx-flicking {
  display: block;   /* il componente Angular diventa block-level */
  height: 100%;     /* prende l’altezza del wrapper (.flicking-hero) */
}

/* 2) Viewport e camera interne si allungano a 100% dell’hero */
:host ::ng-deep .flicking-hero .flicking-viewport,
:host ::ng-deep .flicking-hero .flicking-camera {
  height: 100%;
}

/* =============================================================================
   RESPONSIVE — MOBILE (≤ 768px)
   - HERO a schermo pieno (100vh). Valutare 100svh/100dvh per iOS se necessario.
   - Titoli e caption dimensionati per schermi piccoli.
   ========================================================================== */
@media (max-width: 768px) {
  .home-container { padding: 0; }

  /* HERO mobile: full viewport */
  .flicking-hero { height: 100vh; }

  /* Pannelli non-hero: margini più stretti */
  .carosello-panel { margin: 0 6px; border-radius: 0; }

  /* Testi */
  .carousel-title { font-size: clamp(20px, 5.2vw, 36px); }
  .panel-caption__text { font-size: clamp(14px, 3.8vw, 22px); }

  /* Controlli */
  :host ::ng-deep .flicking-pagination { margin-top: 8px; }
  :host ::ng-deep .flicking-arrow-prev { left: 16px !important; }
  :host ::ng-deep .flicking-arrow-next { right: 16px !important; }

  .carousel-section-header {
    margin: 0.75rem 0;

    .edit-admin-icon {
      top: 8px; right: 8px;
      background: rgba(255, 255, 255, 0.9);
    }
  }
}

/* =============================================================================
   RESPONSIVE — DESKTOP (≥ 769px)
   - HERO più basso (70vh)
   - Titoli/caption più grandi
   - Card non-hero con radius e margini più ampi
   ========================================================================== */
@media (min-width: 769px) {
  .home-container { padding: 0; }

  /* HERO desktop: 70vh per un rapporto estetico bilanciato */
  .flicking-hero { height: 70vh; }

  /* Pannelli non-hero: più respiro e angoli arrotondati */
  .carosello-panel { margin: 0 10px; border-radius: 12px; }

  /* Testi */
  .carousel-title { font-size: clamp(28px, 3.6vw, 56px); }
  .panel-caption__text { font-size: clamp(16px, 2.2vw, 28px); }

  /* Controlli */
  :host ::ng-deep .flicking-pagination { margin-top: 14px; }
  :host ::ng-deep .flicking-arrow-prev { left: 40px !important; }
  :host ::ng-deep .flicking-arrow-next { right: 40px !important; }

  .carousel-section-header {
    margin: 1rem 0 1.25rem;

    .edit-admin-icon {
      top: 16px; right: 16px;
      background: rgba(255, 255, 255, 0.75);
    }
  }
}

/* =============================================================================
   ANIMAZIONI CAROSELLO (classe applicata su cambio slide)
   - .zoom-enter: re-trigger ad ogni change (remove → reflow → add in TS).
   ========================================================================== */
@keyframes zoomInReturnLinear {
  0% { transform: scale(1.08); opacity: 0.75; }
  100% { transform: scale(1);    opacity: 1; }
}

.zoom-enter {
  animation: zoomInReturnLinear 1000ms linear both;
  transform-origin: center center;
}

/* =============================================================================
   NOTA DI COMPATIBILITÀ (pulizia classi legacy)
   - Eventuali vecchie classi come .carousel-panels-name sono state sostituite
     dalla caption per-pannello: .panel-caption + .panel-caption__text.
   - Lasciare rimosse per evitare duplicazioni/confusione.
   ========================================================================== */
