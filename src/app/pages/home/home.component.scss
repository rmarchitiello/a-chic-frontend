/* ============================================================================
   COME USARE LE CLASSI (riassunto operativo)
   ----------------------------------------------------------------------------
   Nel TS passa le classi così (array per ngClass):
     wrapperTitoloSezioneClass: ['wrapper-titolo']
     titoloSezioneClass:        ['titolo']
     wrapperClass:              ['wrapper-carosello', 'by-3']  // es.: 3 card per viewport
     panelClass:                ['pannelli-carosello']

   Griglie desktop (≥769px):
     'by-1'  → 1 card a viewport (hero full bleed, altezza ~70vh)
     'by-2'  → 2 card per viewport
     'by-3'  → 3 card per viewport
     'by-4'  → 4 card per viewport

   Griglie mobile (≤768px):
     'by-1'  → 1 card a viewport (default hero, altezza ~100vh)
     'by-2'  → 2 card per viewport (opzionale su mobile)
     'by-3' e 'by-4'  → supportate ma sconsigliate (spazi molto ridotti)

   Variabili CSS sul wrapper (customizzabili per singola sezione aggiungendo altre classi):
     --gap-x   → spaziatura orizzontale tra pannelli
     --panel-h → altezza dei pannelli (propagata a viewport/camera e ai pannelli)
   ============================================================================ */


/* ============================================================================
   MOBILE (≤ 768px)
   In questa sezione si impostano tutti gli stili per smartphone e piccoli tablet.
   Si replicano solo i selettori necessari; nessuno stile è definito fuori da
   questa media query per evitare conflitti.
   ============================================================================ */
@media (max-width: 768px) {
  /* Struttura pagina di base (contenitori principali) */
  :host { display: block; background: #fff; }
  .home,
  .home-container {
    background: #fff;
    width: 100%;
    margin: 0 auto;
    padding: 0;
    .carousel-add-global {
      display: flex;
      justify-content: center;

      button {
        background: rgba(255, 255, 255, 0.9);
        border-radius: 9999px;

        mat-icon { color: #000; }
      }
    }

  }

  /* Header admin: contiene esclusivamente il pulsante “modifica” */
  /* =======================
   HEADER SEZIONE (ADMIN)
   ======================= */
.carousel-section-header {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  margin: 0;

  /* EDIT: in alto a destra */
  .edit-admin-icon {
    position: absolute;
    top: 8px;
    right: 8px;
    z-index: 10;
    background: rgba(255, 255, 255, 0.9);

    mat-icon { color: #000; }
  }
}






  /* Titolo sezione (sempre SOPRA al carosello, non overlay) */
  .wrapper-titolo { margin: 0 0 .5rem 0; }
  .titolo {
    margin: 0;
    color: #111;
    font-weight: 700;
    line-height: 1.15;
    text-align: left;
    font-size: clamp(20px, 5.2vw, 32px);
    /* gestione testi lunghi e parole senza spazi */
    white-space: normal;
    overflow-wrap: anywhere;
    word-break: break-word;
    hyphens: auto;
  }

  /* ---------- REVEAL (direttiva appRevealOnScroll) ----------
     La direttiva aggiunge .is-reveal-init all'inizio e poi .reveal-up
     quando l'elemento entra in viewport. Qui definisco gli stati:
     - wrapper del titolo
     - wrapper del carosello
     - pannelli interni (stagger opzionale via --stagger) */

  /* Titolo: stato iniziale e stato rivelato */
  .wrapper-titolo.is-reveal-init { opacity: 0; transform: translateY(16px); }
  .wrapper-titolo.reveal-up {
    opacity: 1; transform: none;
    transition: opacity .55s ease, transform .55s ease;
  }

  /* Wrapper carosello: fade/translate generale del blocco */
  .wrapper-carosello.is-reveal-init { opacity: 0; transform: translateY(24px); }
  .wrapper-carosello.reveal-up {
    opacity: 1; transform: none;
    transition: opacity .6s ease, transform .6s ease;
  }

  /* Stagger dei pannelli quando è il wrapper a rivelarsi */
  .wrapper-carosello.is-reveal-init [flicking-panel] { opacity: 0; transform: translateY(16px); }
  .wrapper-carosello.reveal-up [flicking-panel] {
    opacity: 1; transform: none;
    transition: opacity .5s ease, transform .5s ease;
    transition-delay: var(--stagger, 0ms); /* impostata inline nel template */
  }

  /* Wrapper del carosello:
     - è l’ancora per frecce/paginazione (posizionamento assoluto interno)
     - definisce le variabili di layout mobile (altezza e gap) */
  .wrapper-carosello {
    position: relative;
    overflow: hidden;
    background: transparent;
    display: block;

    /* default mobile */
    --gap-x: 12px;   /* spazio tra card */
    --panel-h: 100vh;/* hero a pieno schermo su mobile */
  }

  /* Propagazione dell’altezza nel DOM generato da Flicking */
  .wrapper-carosello > ngx-flicking { display: block; height: var(--panel-h); }
  :host ::ng-deep .wrapper-carosello .flicking-viewport,
  :host ::ng-deep .wrapper-carosello .flicking-camera { height: var(--panel-h); }

  /* Pannelli del carosello (classe assegnata ai <div flicking-panel>) */
  .pannelli-carosello {
    box-sizing: border-box;
    position: relative;              /* necessario per la caption interna */
    overflow: hidden;
    width: 100%;
    height: var(--panel-h);          /* segue l’altezza del wrapper */
    margin: 0;                       /* nessun gap: lo gestiscono le griglie by-N */
    border-radius: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    background: #111;

    /* Media interni */
    img,
    video {
      width: 100%;
      height: 100%;
      object-fit: cover;             /* riempie senza distorsioni */
      object-position: center;
      display: block;
      background: #000;
      -webkit-user-drag: none;       /* evita drag nativo su mobile */
      user-select: none;
      -webkit-user-select: none;
    }

    audio { width: 80%; display: block; }
  }

  /* -------- Griglie mobile by-N (applicate sul wrapper) --------
     Ogni regola imposta la width dei [flicking-panel] in base a --gap-x.
     NB: Flicking gestisce lo scorrimento; qui si imposta solo la larghezza delle card. */

  /* 1 card per viewport (hero) */
  .wrapper-carosello.by-1 [flicking-panel] {
    width: 100%;
    margin-right: 0;
  }

  /* 2 card per viewport (compatta) */
  .wrapper-carosello.by-2 { --panel-h: 60vh; } /* altezza meno invadente */
  .wrapper-carosello.by-2 [flicking-panel] {
    width: calc((100% - var(--gap-x)) / 2);
    margin-right: var(--gap-x);
  }

  /* 3 card per viewport (sconsigliata su schermi piccoli, ma supportata) */
  .wrapper-carosello.by-3 { --panel-h: 48vh; }
  .wrapper-carosello.by-3 [flicking-panel] {
    width: calc((100% - (var(--gap-x) * 2)) / 3);
    margin-right: var(--gap-x);
  }

  /* 4 card per viewport (sconsigliata su schermi piccoli, ma supportata) */
  .wrapper-carosello.by-4 { --panel-h: 48vh; }
  .wrapper-carosello.by-4 [flicking-panel] {
    width: calc((100% - (var(--gap-x) * 3)) / 4);
    margin-right: var(--gap-x);
  }

  /* Caption per slide (panel name centrato) */
  .panel-caption {
    position: absolute;
    inset: 0;
    display: grid;
    place-items: center;             /* centratura orizzontale+verticale */
    pointer-events: none;            /* non blocca swipe/click */
    z-index: 1;                      /* sotto frecce/paginazione */
  }
  .panel-caption__text {
    color: #fff;
    text-align: center;
    padding: 0 .75rem;
    line-height: 1.15;
    font-weight: 600;
    font-size: clamp(14px, 3.8vw, 22px);
    text-shadow:
      0 2px 8px rgba(0, 0, 0, 0.55),
      0 0 1px rgba(0, 0, 0, 0.6);
  }

  /* Placeholder quando non ci sono media */
  .media-placeholder {
    font-size: 14px;
    color: #999;
    text-align: center;
    padding: 1rem;
  }

  /* UI plugin Flicking: utilità/controlli */
  :host ::ng-deep .none { opacity: 0; visibility: hidden; pointer-events: none; }

  :host ::ng-deep .flicking-arrow-prev,
  :host ::ng-deep .flicking-arrow-next {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 3;                     /* sopra la caption */
  }
  :host ::ng-deep .flicking-arrow-prev { left: 16px !important; }
  :host ::ng-deep .flicking-arrow-next { right: 16px !important; }

  :host ::ng-deep .flicking-pagination {
    margin-top: 8px;                /* per caroselli non hero */
    text-align: center;
    z-index: 3;
  }
  /* Paginazione interna all’hero */
  :host ::ng-deep .wrapper-carosello .flicking-pagination {
    position: absolute;
    left: 0; right: 0; bottom: 24px;
    margin-top: 0;
    z-index: 3;
  }

  :host ::ng-deep .flicking-pagination-bullet {
    display: inline-block;
    width: 8px; height: 8px;
    margin: 0 4px;
    border-radius: 50%;
    background-color: rgba(0, 0, 0, 0.25);
    cursor: pointer;
    transition: background-color 0.2s;
  }
  :host ::ng-deep .flicking-pagination-bullet-active { background-color: #111; }

  /* Animazione da applicare al cambio slide (classe aggiunta via TS) */
  @keyframes zoomInReturnLinear {
    0% { transform: scale(1.08); opacity: 0.75; }
    100% { transform: scale(1);    opacity: 1; }
  }
  .zoom-enter {
    animation: zoomInReturnLinear 1000ms linear both;
    transform-origin: center center;
  }
}


/* ============================================================================
   DESKTOP (≥ 769px)
   In questa sezione si impostano gli stili per desktop e laptop. Le altezze,
   le spaziature e la tipografia sono ottimizzate per schermi ampi.
   ============================================================================ */
@media (min-width: 769px) {
  /* Struttura pagina di base (contenitori principali) */
  :host { display: block; background: #fff; }
  .home,
  .home-container {
    background: #fff;
    width: 100%;
    margin: 0 auto;
    padding: 0;
    .carousel-add-global {
      display: flex;
      justify-content: center;

      button {
        background: rgba(255, 255, 255, 0.9);
        border-radius: 9999px;

        mat-icon { color: #000; }
      }
    }
  }

  /* Header admin: come mobile ma con margini regolati */
  .carousel-section-header {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    margin: 0;

    .edit-admin-icon {
      position: absolute;
      top: 16px;
      right: 16px;
      z-index: 10;
      background: rgba(255, 255, 255, 0.75);

      mat-icon { color: #000; }
    }
  }

  /* Titolo sezione (sopra al carosello) */
  .wrapper-titolo { margin: 0 0 .75rem 0; }
  .titolo {
    margin: 0;
    color: #111;
    font-weight: 700;
    line-height: 1.15;
    text-align: left;
    font-size: clamp(24px, 3.2vw, 44px);
    white-space: normal;
    overflow-wrap: anywhere;
    word-break: break-word;
    hyphens: auto;
  }

  /* ---------- REVEAL (direttiva appRevealOnScroll) ----------
     Duplico anche su desktop, così il comportamento è coerente. */

  .wrapper-titolo.is-reveal-init { opacity: 0; transform: translateY(18px); }
  .wrapper-titolo.reveal-up {
    opacity: 1; transform: none;
    transition: opacity .55s ease, transform .55s ease;
  }

  .wrapper-carosello.is-reveal-init { opacity: 0; transform: translateY(28px); }
  .wrapper-carosello.reveal-up {
    opacity: 1; transform: none;
    transition: opacity .6s ease, transform .6s ease;
  }

  .wrapper-carosello.is-reveal-init [flicking-panel] { opacity: 0; transform: translateY(18px); }
  .wrapper-carosello.reveal-up [flicking-panel] {
    opacity: 1; transform: none;
    transition: opacity .5s ease, transform .5s ease;
    transition-delay: var(--stagger, 0ms);
  }

  /* Wrapper del carosello:
     - ancora per frecce/paginazione
     - default desktop: gap più ampio e altezza standard */
  .wrapper-carosello {
    position: relative;
    overflow: hidden;
    background: transparent;
    display: block;

    /* default desktop */
    --gap-x: 24px;
    --panel-h: 480px;  /* altezza base per griglie multi-carta */
  }

  /* Propagazione dell’altezza nel DOM generato da Flicking */
  .wrapper-carosello > ngx-flicking { display: block; height: var(--panel-h); }
  :host ::ng-deep .wrapper-carosello .flicking-viewport,
  :host ::ng-deep .wrapper-carosello .flicking-camera { height: var(--panel-h); }

  /* Pannelli del carosello */
  .pannelli-carosello {
    box-sizing: border-box;
    position: relative;
    overflow: hidden;
    width: 100%;
    height: var(--panel-h);
    margin: 0;                 /* il “gap” è demandato alla griglia by-N */
    border-radius: 0;          /* si può arrotondare se si adottano layout “card” */
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    background: #111;

    img,
    video {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
      display: block;
      background: #000;
      -webkit-user-drag: none;
      user-select: none;
      -webkit-user-select: none;
    }

    audio { width: 70%; display: block; }
  }

  /* ---------------- Griglie desktop by-N (applicate sul wrapper) ---------------
     Le larghezze pannello sono calcolate con --gap-x. Di default lasciamo un
     margin-right sul pannello; l’ultimo viene azzerato per evitare “bordo bianco”. */

  /* 1 card per viewport (hero): full bleed, altezza responsiva */
  .wrapper-carosello.by-1 { --panel-h: 70vh; }
  .wrapper-carosello.by-1 [flicking-panel] { width: 100%; margin-right: 0; }

  /* 2 card per viewport */
  .wrapper-carosello.by-2 [flicking-panel] {
    width: calc((100% - var(--gap-x)) / 2);
    margin-right: var(--gap-x);
  }

  /* 3 card per viewport */
  .wrapper-carosello.by-3 [flicking-panel] {
    width: calc((100% - (var(--gap-x) * 2)) / 3);
    margin-right: var(--gap-x);
  }

  /* 4 card per viewport */
  .wrapper-carosello.by-4 [flicking-panel] {
    width: calc((100% - (var(--gap-x) * 3)) / 4);
    margin-right: var(--gap-x);
  }

  /* Variante compatta per griglie fitte (riduce l’altezza) */
  .wrapper-carosello.by-3,
  .wrapper-carosello.by-4 { --panel-h: 420px; }

  /* Rimuove il gap sull’ultimo pannello visibile */
  :host ::ng-deep .wrapper-carosello .flicking-camera > [flicking-panel]:last-child {
    margin-right: 0;
  }

  /* Caption per slide (panel name centrato) */
  .panel-caption {
    position: absolute;
    inset: 0;
    display: grid;
    place-items: center;
    pointer-events: none;
    z-index: 1;
  }
  .panel-caption__text {
    color: #fff;
    text-align: center;
    padding: 0 1rem;
    line-height: 1.15;
    font-weight: 600;
    font-size: clamp(16px, 2.2vw, 28px);
    text-shadow:
      0 2px 8px rgba(0, 0, 0, 0.55),
      0 0 1px rgba(0, 0, 0, 0.6);
  }

  /* Placeholder quando non ci sono media */
  .media-placeholder {
    font-size: 14px;
    color: #999;
    text-align: center;
    padding: 1rem;
  }

  /* UI plugin Flicking: utilità/controlli */
  :host ::ng-deep .none { opacity: 0; visibility: hidden; pointer-events: none; }

  :host ::ng-deep .flicking-arrow-prev,
  :host ::ng-deep .flicking-arrow-next {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 3;
  }
  :host ::ng-deep .flicking-arrow-prev { left: 40px !important; }
  :host ::ng-deep .flicking-arrow-next { right: 40px !important; }

  :host ::ng-deep .flicking-pagination {
    margin-top: 14px;          /* usata quando la paginazione è esterna all’hero */
    text-align: center;
    z-index: 3;
  }
  /* Paginazione interna all’area del carosello (hero) */
  :host ::ng-deep .wrapper-carosello .flicking-pagination {
    position: absolute;
    left: 0; right: 0; bottom: 24px;
    margin-top: 0;
    z-index: 3;
  }
  :host ::ng-deep .flicking-pagination-bullet {
    display: inline-block;
    width: 8px; height: 8px;
    margin: 0 4px;
    border-radius: 50%;
    background-color: rgba(0, 0, 0, 0.25);
    cursor: pointer;
    transition: background-color 0.2s;
  }
  :host ::ng-deep .flicking-pagination-bullet-active { background-color: #111; }

  /* Animazione da applicare al cambio slide (classe aggiunta via TS) */
  @keyframes zoomInReturnLinear {
    0% { transform: scale(1.08); opacity: 0.75; }
    100% { transform: scale(1);    opacity: 1; }
  }
  .zoom-enter {
    animation: zoomInReturnLinear 1000ms linear both;
    transform-origin: center center;
  }
}
