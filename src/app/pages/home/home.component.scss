/* =============================================================================
   HOME COMPONENT (unico template per desktop + mobile) — versione NGX-FLICKING
   - Mantiene background bianco
   - Alcune sezioni “sanguinano” a tutta larghezza (full-bleed)
   - Gestione pannelli/carousel con @egjs/ngx-flicking
   ========================================================================== */

:host {
  display: block;
  background: #fff; /* sfondo coerente con il resto della pagina */
}

.home,
.home-container {
  background: #fff;
  width: 100%;
  margin: 0 auto;
}

/* =============================================================================
   HEADER DI SEZIONE (titolo + pulsante admin)
   - Da usare sopra ciascun carosello
   ========================================================================== */
.carousel-section-header {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: 1rem 0;

  h2 {
    margin: 0;
    color: #222;
    font-size: 1.4rem;
    font-weight: 800;
  }

  .edit-admin-icon {
    position: absolute;
    top: 12px;
    right: 12px;
    z-index: 10;
    background: rgba(255, 255, 255, 0.85);

    mat-icon { color: #000; }
  }
}

/* =============================================================================
   UTILITY FULL-BLEED
   - Consente a blocchi specifici di estendersi ai bordi viewport
   ========================================================================== */
@mixin full-bleed {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  background: #fff;
}

/* =============================================================================
   WRAPPERCLASS  (APPLICA QUESTA CLASSE IN HTML: [ngClass]="car.otherOption.wrapperClass")
   - Passa 'flicking-hero' sul carosello principale (hero)
   - Passa 'flicking-default' sugli altri caroselli
   ========================================================================== */

/* Wrapper di default: sezioni standard */
.flicking-default {
  width: 100%;
  margin: 0 auto;
  position: relative;
}

/* Wrapper per il carosello principale (hero full screen)
   >>> APPLICA: otherOption.wrapperClass = 'flicking-hero' sul primo carosello
*/
.flicking-hero {
  @include full-bleed();
  /* Se hai un header fixed e vuoi che l’hero non sia coperto,
     puoi usare questa variante (scommenta e definisci --header-h):
     height: calc(100vh - var(--header-h)); */
  height: 100vh;          /* occupa l’intera viewport */
  overflow: hidden;
  position: relative;

  /* IMPORTANTE:
     Se non vuoi vedere una fascia colorata sotto i pannelli,
     evita un colore pieno qui (usa transparent o lo stesso sfondo pagina) */
  background: transparent; /* era #000; lo rendiamo neutro */
}

/* =============================================================================
   PANNELLI NGX-FLICKING
   ========================================================================== */

/* Stile base per OGNI pannello; le varianti estendono questo */
.carosello-panel {
  overflow: hidden;
  width: 100%;
  height: 220px;        /* altezza base (mobile) */
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  background: #eee;
  border-radius: 12px;
  margin: 0 8px;
  font-weight: 600;

  img,
  video {
    max-width: 100%;
    max-height: 100%;
    object-fit: cover;
    object-position: center;
    border-radius: inherit;
    display: block;
    background: #fff;
  }

  audio {
    width: 80%;
    display: block;
  }
}

/* Placeholder quando non ci sono media */
.media-placeholder {
  font-size: 14px;
  color: #666;
  text-align: center;
  padding: 1rem;
}

/* =============================================================================
   PANELCLASS  (APPLICA QUESTA CLASSE IN HTML: [ngClass]="['carosello-panel', car.otherOption.panelClass]")
   - 'panel-hero' per pannelli fullscreen dell’hero
   - 'panel-default' per pannelli standard
   - 'panel-card' per card più compatte (modelli/creazioni)
   ========================================================================== */

.panel-default { @extend .carosello-panel; }

/* >>> APPLICA: otherOption.panelClass = 'panel-hero' sul primo carosello */
.panel-hero {
  @extend .carosello-panel;
  /* Se usi --header-h nel wrapper, usa la stessa calc qui:
     height: calc(100vh - var(--header-h)); */
  height: 100vh;
  border-radius: 0;
  margin: 0;

  img,
  video {
    width: 100%;
    height: 100%;
    object-fit: cover;  /* copre tutto senza bande */
  }
}

.panel-card {
  @extend .carosello-panel;
  height: 300px;

  img,
  video { object-fit: contain; }
}

/* =============================================================================
   ANIMAZIONI
   ========================================================================== */
@keyframes zoomInReturnLinear {
  0% { transform: scale(1.5); opacity: 0.7; }
  100% { transform: scale(1); opacity: 1; }
}

.zoom-enter {
  animation: zoomInReturnLinear 1000ms linear both;
  transform-origin: center center;
}


//aggiungi none quindi non mostrare piu quella classe
/* display: none

Significa che l’elemento viene completamente nascosto:

non occupa spazio nel layout,

non è visibile,

non è interattivo.*/
.none {
  display: none !important;
}


/* =============================================================================
   FRECCE E PAGINAZIONE NGX-FLICKING
   - N.B.: la paginazione di default aggiunge spazio sotto (margin-top).
           Nell'HERO la posizioniamo in ASSOLUTO sopra l'immagine
           per NON aggiungere altezza extra ⇒ niente “fascia nera”.
   ========================================================================== */

/* Frecce: posizione generale (verrà raffinata per l’hero sotto) */
:host ::ng-deep .flicking-arrow-prev { left: 40px !important; }
:host ::ng-deep .flicking-arrow-next { right: 40px !important; }

/* Paginazione default (per caroselli NON-hero) */
:host ::ng-deep .flicking-pagination {
  margin-top: 12px;
  text-align: center;
}

:host ::ng-deep .flicking-pagination-bullet {
  display: inline-block;
  width: 8px;
  height: 8px;
  margin: 0 4px;
  border-radius: 50%;
  background-color: rgba(10, 10, 10, 0.2);
  cursor: pointer;
  transition: background-color 0.3s;
}

:host ::ng-deep .flicking-pagination-bullet-active { background-color: #333; }

/* -----------------------------------------------------------------------------
   HERO: PAGINAZIONE E FRECCE IN POSIZIONE ASSOLUTA
   >>> QUESTA È LA MODIFICA CHIAVE CHE EVITA LA "FASCIA NERA" SOTTO
   - Applica SOLO quando il wrapper è .flicking-hero
   ---------------------------------------------------------------------------*/
:host ::ng-deep .flicking-hero .flicking-pagination {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 24px;  /* alza/abbassa i pallini dentro l’hero */
  margin-top: 0; /* annulla lo spazio extra sotto al pannello */
  z-index: 2;    /* sopra al media */
}

/* Frecce centrate verticalmente dentro l’hero */
:host ::ng-deep .flicking-hero .flicking-arrow-prev,
:host ::ng-deep .flicking-hero .flicking-arrow-next {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 2;
}

/* =============================================================================
   RESPONSIVE — MOBILE (≤ 768px)
   ========================================================================== */
@media (max-width: 768px) {
  .home-container { padding: 0; }

  .carosello-panel {
    height: 220px;
    margin: 0 6px;
    border-radius: 10px;
  }

  :host ::ng-deep .flicking-pagination { margin-top: 8px; }

  :host ::ng-deep .flicking-arrow-prev { left: 16px !important; }
  :host ::ng-deep .flicking-arrow-next { right: 16px !important; }

  .carousel-section-header {
    margin: 0.75rem 0;

    h2 { font-size: 1.2rem; font-weight: 800; }

    .edit-admin-icon {
      top: 8px;
      right: 8px;
      background: rgba(255, 255, 255, 0.9);
    }
  }

  /* Hero su mobile: spesso meglio NON occupare tutto lo schermo */
  .flicking-hero { height: 70vh; }      /* wrapper */
  .panel-hero  { height: 70vh; }        /* pannello */
}

/* =============================================================================
   RESPONSIVE — DESKTOP (≥ 769px)
   ========================================================================== */
@media (min-width: 769px) {
  .home-container { padding: 0; }

  .carosello-panel {
    height: 360px;
    margin: 0 10px;
    border-radius: 12px;
  }

  :host ::ng-deep .flicking-pagination { margin-top: 14px; }

  :host ::ng-deep .flicking-arrow-prev { left: 40px !important; }
  :host ::ng-deep .flicking-arrow-next { right: 40px !important; }

  .carousel-section-header {
    margin: 1rem 0 1.25rem;

    h2 { font-size: 1.6rem; font-weight: 800; }

    .edit-admin-icon {
      top: 16px;
      right: 16px;
      background: rgba(255, 255, 255, 0.75);
    }
  }

  /* Hero desktop fullscreen */
  .flicking-hero { height: 100vh; }  /* wrapper */
  .panel-hero  { height: 100vh; }    /* pannello */
}

/* =============================================================================
   NOTE OPERATIVE — DOVE APPLICARE COSA (RIEPILOGO)
   - Nel TS: per il primo carosello (HERO)
       otherOption.wrapperClass = 'flicking-hero'
       otherOption.panelClass   = 'panel-hero'
       otherOption.haveBullet   = true/false (a tua scelta)
     Negli altri caroselli:
       otherOption.wrapperClass = 'flicking-default'
       otherOption.panelClass   = 'panel-default' o 'panel-card'
   - Nel template HTML:
       <ngx-flicking [ngClass]="car.otherOption.wrapperClass"> ...
       <div flicking-panel [ngClass]="['carosello-panel', car.otherOption.panelClass]"> ...
   - La paginazione nell’HERO è in assoluto (vedi blocco .flicking-hero .flicking-pagination):
     così non aggiunge margine in basso → niente “fascia nera”.
   - Se hai header fixed: valuta l’uso di calc(100vh - var(--header-h)) su .flicking-hero e .panel-hero.
   ========================================================================== */
