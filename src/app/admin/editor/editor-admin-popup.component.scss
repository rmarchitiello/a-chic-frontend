/* =======================
   Contenitore principale del dialog
======================= */
.dialog-content {
  height: 100%;
  padding: 2rem;
  position: relative;
  overflow: unset; // Serve per far uscire tooltip e overlay dalle card

  /* =======================
     Contenitore delle card
  ======================= */
  .preview-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    justify-content: center;
    margin-bottom: 2rem;
  }

  /* =======================
     Card singola di anteprima
  ======================= */
  .preview-card {
    background-color: #fff;
    border: 1px solid #e0e0e0;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
    width: 220px;
    text-align: left;
    transition: transform 0.25s ease;
    position: relative;
    overflow: hidden;

    /* Contenitore interno della card per isolare lo scale */
    .card-inner {
      padding: 1rem;
      display: flex;
      flex-direction: column;
      align-items: center;
      transition: transform 0.25s ease;
    }

    /* Effetto hover solo sul contenuto, non sulla struttura della griglia */
    &:hover .card-inner {
      transform: scale(1.03);
    }

    img {
      width: 100%;
      max-height: 180px;
      object-fit: contain;
      border-radius: 8px;
      background-color: #f5f5f5;
      margin-bottom: 1rem;
    }

    /* =======================
       Metadati della media (nome, descrizione, ecc.)
    ======================= */
    .media-display-name {
      width: 100%;
      font-size: 0.9rem;
      color: #444;
      line-height: 1.4;
      display: flex;
      flex-direction: column;
      gap: 0.2rem;

.tooltip-wrapper {
  // Imposta il blocco come elemento di riga-blocco, utile per tooltip
  display: inline-block;

  // Impedisce la rottura del testo su più righe
  white-space: nowrap;

  // Limita la larghezza al contenitore padre
  max-width: 100%;

  // Nasconde il testo che eccede i limiti del contenitore
  overflow: hidden;

  // Visualizza i "..." se il testo è troppo lungo
  text-overflow: ellipsis;

  // Cambia il cursore per far capire che è interattivo
  cursor: pointer;

  // Aggiunta consigliata: padding verticale per facilitare l'hover
  padding: 0.25rem 0;

  // Fix per evitare comportamenti anomali con tooltip e hover
  line-height: 1.4;
}


      .context-entry {
        display: flex;
        flex-wrap: wrap;
        align-items: baseline;

        .context-label {
          font-weight: 600;
          margin-right: 0.25rem;
          color: #111;
          white-space: nowrap;
        }

        .context-value {
          color: #444;
          flex: 1;
          min-width: 0;
        }
      }
    }

    /* =======================
       Overlay con immagini non frontali
       Appare solo al hover, integrato nella card
    ======================= */
    .non-frontali-overlay {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      margin-top: 0.5rem;
      width: 100%;
      padding-top: 0.5rem;
      border-top: 1px solid #eee;
      animation: fadeIn 0.2s ease-in-out;

      img {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 4px;
        border: 1px solid #ddd;
        transition: transform 0.2s ease;

        &:hover {
          transform: scale(1.05);
        }
      }
    }
  }
}

/* =======================
   Pulsante di chiusura (in alto a destra)
======================= */
.chiudi-btn {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 0.25rem;
  display: flex;
  align-items: center;
  justify-content: center;

  mat-icon {
    font-size: 24px;
    color: #888;
    transition: color 0.3s ease;
  }

  &:hover mat-icon {
    color: #000;
  }
}

/* =======================
   Overlay Angular Material
   Permette al contenuto di uscire dai confini
======================= */
::ng-deep .cdk-overlay-pane {
  overflow: visible !important;
}

/* =======================
   Animazione fade-in per immagini laterali
======================= */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-6px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
