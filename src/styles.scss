/* ========== STILE GLOBALE BASE ========== */
html, body {
  margin: 0;
  padding: 0;
  height: auto;
  min-height: 100vh;
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  touch-action: manipulation;
}

/* ========== STILE PER DESKTOP (larghezza ≥ 769px) ========== */
@media (min-width: 769px) {
  html, body {
    font-family: 'Montserrat', sans-serif; // Font elegante per desktop
    font-size: 16px;
    line-height: 1.6;
    color: #222;
  }

  .mat-sidenav-content {
    display: block;
    min-height: 100vh;
    overflow: visible;
  }
}

/* ========== STILE PER MOBILE (larghezza ≤ 768px) ========== */
@media (max-width: 768px) {
  html, body {
    font-family: 'Inter', sans-serif; // Font più leggibile per mobile
    font-size: 15px;
    line-height: 1.5;
    color: #222;
  }

  .mat-sidenav-content {
    display: block;
    min-height: 100vh;
    overflow: visible;
  }
}

/* =============================================================
   STILI GLOBALI PER TOOLTIP ANGULAR MATERIAL (matTooltip)
   Garantisce compatibilità anche dentro i Dialog Material.
   Va incluso in `styles.scss` per effetto globale.
============================================================= */

/* Overlay principale Angular Material */
.cdk-overlay-container {
  position: fixed !important;
  z-index: 9999 !important;
  overflow: visible !important;
}

/* Pane interno dell'overlay, che ospita i tooltip */
.cdk-overlay-pane {
  overflow: visible !important;
  pointer-events: auto !important; // Permette hover e interazioni
}

/* Tooltip di base Angular Material */
::ng-deep .mat-tooltip {
  opacity: 1 !important;
  visibility: visible !important;
  pointer-events: auto !important;
  z-index: 10000 !important;
  padding: 8px;
  border-radius: 4px;
  font-size: 13px;
  white-space: normal !important;
  max-width: 250px !important;
  word-break: break-word;
}

/* Tooltip panel container */
::ng-deep .mat-tooltip-panel {
  max-height: none !important;
  overflow: visible !important;
  pointer-events: auto !important;
}

/* ============================================================
   CLASSE PERSONALIZZATA PER TOOLTIP AMMINISTRATIVO
   Da usare con: matTooltipClass="tooltip-admin"
============================================================ */
::ng-deep .tooltip-admin {
  background-color: rgba(255, 255, 255, 0.95) !important;
  color: #25d366 !important;
  font-weight: 500;
  font-size: 15px;
  line-height: 1.6;
  border-radius: 8px;
  padding: 16px 20px;
  max-width: 90vw;
  max-height: 60vh;
  white-space: normal !important;
  word-break: break-word;
  overflow-y: auto;
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.3);
  scrollbar-width: thin;
  scrollbar-color: #999 transparent;

  * {
    background-color: transparent !important;
    color: #000000 !important;
    font-size: 15px !important;
    line-height: 1.6 !important;
  }
}

/* ============================================================
   DIALOG: STILE PER MODIFICA COMPLETA
   Applicato con: panelClass: 'popup-descrizione-dialog'
============================================================ */
::ng-deep .popup-descrizione-dialog .mat-mdc-dialog-container {
  background-color: transparent !important; // Sfondo trasparente (stile editor)
  box-shadow: none !important;
  border-radius: 0 !important;
  padding: 0 !important;
  max-height: none !important;
  overflow: visible !important;
}

/* ============================================================
   DIALOG: STILE PER SOLA VISUALIZZAZIONE (onlyView = true)
   Applicato tramite: panelClass: 'popup-descrizione-viewonly'
   Target: contenitore del dialog Angular Material (MDC)
============================================================ */
::ng-deep .popup-descrizione-viewonly .mat-mdc-dialog-container {
  background-color: #fff !important;              // Sfondo bianco per la visualizzazione chiara
  border-radius: 16px !important;                 // Angoli stondati per effetto soft e moderno
  padding: 24px !important;                       // Spazio interno regolare

  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1) !important; // Ombra leggera per profondità visiva

  // Dimensioni dinamiche: si adatta al contenuto
  width: auto !important;
  height: auto !important;

  // Previene l'overflow orizzontale e verticale
  max-width: 90vw !important;   // Non supera il 90% della larghezza dello schermo
  max-height: 90vh !important;  // Non supera il 90% dell'altezza visibile

  overflow: visible !important; // Permette ai contenuti (es. tooltip, overlay) di uscire dal contenitore
}

/* Forza visibilità e z-index alto al pulsante di chiusura — SERVE PER IL POP UP E LO RENDO GLOBALE */
.chiudi-btn {
  position: absolute;
  top: 1rem;
  right: 1rem;
  z-index: 11000;
  background: transparent;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Stile globale per mat-icon all'interno del pulsante chiusura */
.chiudi-btn mat-icon {
  color: #000;
  font-size: 28px;
  opacity: 1;
  display: block;
  width: 28px;
  height: 28px;
  line-height: 28px;
  font-family: 'Material Icons'; /* Forza il font corretto */
}




/* Forza overflow visibile sui contenitori dialog Angular Material */
.mat-mdc-dialog-inner-container,
.mat-mdc-dialog-surface,
.dialog-content {
  overflow: visible !important;
  position: relative !important;
  z-index: 10000 !important;
}

/* ============================================================
   ESEMPIO USO TOOLTIP CON CLASSE PERSONALIZZATA:

   <div
     matTooltip="Testo informativo"
     matTooltipClass="tooltip-admin"
     matTooltipPosition="above"
   >
     <u style="cursor: help;">Testo con tooltip</u>
   </div>
============================================================ */

/* ============================================================
   ESEMPIO HTML (da mettere nel tuo componente):

   <div class="media-display-name">
     <span
       class="tooltip-wrapper"
       [matTooltip]="context.descrizione"
       matTooltipClass="tooltip-admin"
       [matTooltipDisabled]="!isLongText(context.descrizione)"
       matTooltipPosition="above"
     >
       <ng-container *ngFor="let contextFormatted of getOrderedFormattedEntries(context)">
         <div class="context-entry">
           <strong class="context-label">{{ contextFormatted.label }}:</strong>
           <span class="context-value">{{ getPreview(contextFormatted.value) }}</span>
         </div>
       </ng-container>
     </span>
   </div>
============================================================ */
